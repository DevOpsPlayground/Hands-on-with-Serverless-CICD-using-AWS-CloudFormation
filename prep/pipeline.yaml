# This script bootstraps the CI/CD pipeline by creating a repository to which you can commit this folder which will
# trigger creation of the pipeline and all the infrastructure required for a project to be hosted and 

AWSTemplateFormatVersion: "2010-09-09"
Description: CFN Template to bootstrap CI/CD pipeline for the CI/CD pipeline!
Parameters:
  RepositoryName:
    Type: String
    AllowedPattern: '[\w\.-]+' 
  StackName:
    Type: String
    AllowedPattern: '[\w\.-]+'
  UserName:
    Type: String
  Password:
    NoEcho: "true"
    Description: The user account password
    Type: String
    MinLength: "8"
    MaxLength: "41"
    AllowedPattern: "[a-zA-Z0-9]*"
    ConstraintDescription: must contain only alphanumeric characters.
  InstanceType:
    Type: String
  PrepStackName:
    Type: String
Resources:
  User:
    Type: "AWS::IAM::User"
    Properties:
      LoginProfile:
        Password: !Ref Password
        PasswordResetRequired: "false"
      Path: "/"
      UserName: !Ref UserName
  UserPolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: !Sub "${AWS::StackName}-user-policy"
      Users:
        - !Ref User
      PolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: Allow
            Action:
              - autoscaling:Describe*
              - cloudwatch:Describe*
              - cloudwatch:Get*
              - cloudwatch:List*
              - logs:Get*
              - logs:Describe*
              - sns:Get*
              - sns:List*
            Resource: '*'
          - 
            Effect: Allow
            Action:
              - codecommit:Get*
              - codecommit:CreateBranch
              - codecommit:ListPullRequests
              - codecommit:PutFile
              - codecommit:ListRepositories
              - codecommit:UpdatePullRequestTitle
              - codecommit:UpdateComment
              - codecommit:TestRepositoryTriggers
              - codecommit:DescribePullRequestEvents
              - codecommit:PostCommentForComparedCommit
              - codecommit:GitPush
              - codecommit:DeleteBranch
              - codecommit:UpdatePullRequestStatus
              - codecommit:CreatePullRequest
              - codecommit:PutRepositoryTriggers
              - codecommit:ListBranches
              - codecommit:PostCommentForPullRequest
              - codecommit:UpdatePullRequestDescription
              - codecommit:GitPull
              - codecommit:BatchGetRepositories
              - codecommit:CancelUploadArchive
              - codecommit:BatchGetPullRequests
              - codecommit:PostCommentReply
            Resource: '*'
          - # Cloud 9 Permissions
            Effect: Allow
            Action:
              - cloud9:DescribeEnvironments
              - cloud9:ListEnvironments
              - cloud9:GetUserPublicKey
              - cloud9:DescribeEnvironmentStatus
              - cloud9:DescribeEnvironmentMemberships  
            Resource: '*'
          -
            Effect: Allow
            Action:
              - cloudformation:DescribeStacks
              - cloudformation:ListChangeSets
              - cloudformation:ListExports
              - cloudformation:ListImports
              - cloudformation:ListStackInstances
              - cloudformation:ListStackResources
              - cloudformation:ListStacks
              - cloudformation:ListStackSetOperationResults
              - cloudformation:ListStackSetOperations
              - cloudformation:ListStackSets
              - cloudformation:Describe*
              - cloudformation:Get*
            Resource: '*'
          -
            Effect: Allow
            Action: 
              - codebuild:*
              - codepipeline:*
            Resource: '*'
          -
            Effect: Allow
            Action:
              - apigateway:*
            Resource: '*'

  Repository:
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryDescription: "CodeCommit repository for project"
      RepositoryName: !Sub ${RepositoryName}
  CFNRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [cloudformation.amazonaws.com]
        Version: '2012-10-17'
        
      Path: /
      Policies:
        - PolicyName: CloudFormationRole
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - 'ec2:*'
                  - codeBuild:*
                  - cloudwatch:*
                  - logs:*
                  - s3:*
                  - codecommit:*
                  - iam:*
                  - codepipeline:*
                  - ecr:*
                  - SNS:*
                Effect: Allow
                Resource: '*' 
              
  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [codepipeline.amazonaws.com]
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
              Service: [codebuild.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                - 's3:*'
                - 'cloudformation:CreateStack'
                - 'cloudformation:DescribeStacks'
                - 'cloudformation:DeleteStack'
                - 'cloudformation:UpdateStack'
                - 'cloudformation:CreateChangeSet'
                - 'cloudformation:ExecuteChangeSet'
                - 'cloudformation:DeleteChangeSet'
                - 'cloudformation:DescribeChangeSet'
                - 'cloudformation:SetStackPolicy'
                - 'cloudwatch:*' # Limit to creation of log groups etc.
                - 'cloudwatchlogs:*' # Limit permissions
                - 'logs:*'
                - 'iam:PassRole'
                - 'sns:*'
                - 'sts:AssumeRole'
                - 'codecommit:*'
                - 'ecr:*'
                Effect: Allow
                Resource: '*'
        - PolicyName: CodeCommitAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                - 'codecommit:*'
                - 'sts:AssumeRole'
                Effect: Allow
                Resource: !GetAtt Repository.Arn
        - PolicyName: CodeBuildAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                - codebuild:*
                - logs:*
                Effect: Allow
                Resource: '*'
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
        Artifacts:
          Type: CODEPIPELINE
        Source:
          Type: CODEPIPELINE
          BuildSpec: |
            version: 0.2
            phases:
              build:
                commands:
                  - !Sub aws cloudformation package
                            --template-file pipeline.yaml
                            --output-template-file output.yaml
                            --s3-bucket $DeploymentBucket
                            --region eu-west-1
            artifacts:
              files: ./**
        Environment:
          ComputeType: BUILD_GENERAL1_SMALL
          Image: aws/codebuild/docker:17.09.0
          Type: LINUX_CONTAINER
          EnvironmentVariables:
            - Name: DeploymentBucket
              Type: PLAINTEXT
              Value: {'Fn::ImportValue': !Sub '${PrepStackName}-DeploymentBucket'}
        Name: !Sub '${AWS::StackName}-CodeBuildProject'
        ServiceRole: !Ref PipelineRole  
        
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      # Name: !Sub '${StackName}-pipeline'
      ArtifactStore:
        Location: {'Fn::ImportValue': !Sub '${PrepStackName}-ArtifactBucket'}
        Type: S3
      DisableInboundStageTransitions: []
      RoleArn: !GetAtt [PipelineRole, Arn]
      Stages:
        - 
          Name: Source
          Actions:
            -
              Name: Checkout
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: CodeCommit
              OutputArtifacts:
                -
                  Name: CFNTemplateOutput
              Configuration:
                BranchName: master
                RepositoryName: !GetAtt Repository.Name
              RunOrder: 1
        -
          Name: PackageCloudFormation
          Actions:
            - 
              Name: PackagePipelineCFN
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref CodeBuildProject
              InputArtifacts: 
                - Name: CFNTemplateOutput
              OutputArtifacts:
                - Name: PackagedCFN
              RunOrder: 1
            
        -  
          Name: Deploy
          Actions:
            -
              Name: CreateUpdate
              InputArtifacts:
                -
                  Name: PackagedCFN
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              OutputArtifacts:
                -
                  Name: CreatedStack
              Configuration:
                ActionMode: CREATE_UPDATE
                RoleArn:
                  Fn::GetAtt: [ CFNRole, Arn ]
                Capabilities: CAPABILITY_NAMED_IAM
                StackName: !Ref StackName
                TemplatePath: PackagedCFN::output.yaml                 
              RunOrder: 2
  IDE:
    Type: AWS::Cloud9::EnvironmentEC2
    DependsOn: UserPolicy
    Properties:
      Repositories: 
      - PathComponent: "./my-pipeline"     
        RepositoryUrl: !GetAtt Repository.CloneUrlHttp
      - PathComponent: "./my-app-clone"
        RepositoryUrl: "https://github.com/ecsdigital/devopsplayground23-app"
      - PathComponent: "./playground-scripts"
        RepositoryUrl: "https://github.com/ecsdigital/devopsplayground-edi-7-cicd-cfn"
      OwnerArn: !GetAtt User.Arn
      Description: "Your own personal playground!"
      AutomaticStopTimeMinutes: 60
      InstanceType: !Ref InstanceType
      Name: !Sub ${AWS::StackName}
      SubnetId: {'Fn::ImportValue': !Sub '${PrepStackName}-SubnetID'}