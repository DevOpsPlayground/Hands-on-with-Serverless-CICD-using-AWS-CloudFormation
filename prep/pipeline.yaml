# This script bootstraps the CI/CD pipeline by creating a repository to which you can commit this folder which will
# trigger creation of the pipeline and all the infrastructure required for a project to be hosted and 

AWSTemplateFormatVersion: "2010-09-09"
Description: CFN Template to bootstrap CI/CD pipeline for the CI/CD pipeline!
Parameters:
  RepositoryName:
    Type: String
    AllowedPattern: '[\w\.-]+' 
  StackName:
    Type: String
    AllowedPattern: '[\w\.-]+'
  UserName:
    Type: String
  Password:
    NoEcho: "true"
    Description: The user account password
    Type: String
    MinLength: "8"
    MaxLength: "41"
    AllowedPattern: "[a-zA-Z0-9]*"
    ConstraintDescription: must contain only alphanumeric characters.
Resources:
  User:
    Type: "AWS::IAM::User"
    Properties:
      LoginProfile:
        Password: !Ref Password
        PasswordResetRequired: "false"
      Path: "/"
      UserName: !Ref UserName
  Repository:
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryDescription: "CodeCommit repository for project"
      RepositoryName: !Ref RepositoryName
  CodepipelineArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled
  CFNRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [cloudformation.amazonaws.com]
        Version: '2012-10-17'
        
      Path: /
      Policies:
        - PolicyName: CloudFormationRole
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - 'ec2:*'
                  - codeBuild:*
                  - cloudwatch:*
                  - logs:*
                  - s3:*
                  - codecommit:*
                  - iam:*
                  - codepipeline:*
                  - ecr:*
                  - SNS:*
                Effect: Allow
                Resource: '*' 
              
  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [codepipeline.amazonaws.com]
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
              Service: [codebuild.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                - 's3:*'
                - 'cloudformation:CreateStack'
                - 'cloudformation:DescribeStacks'
                - 'cloudformation:DeleteStack'
                - 'cloudformation:UpdateStack'
                - 'cloudformation:CreateChangeSet'
                - 'cloudformation:ExecuteChangeSet'
                - 'cloudformation:DeleteChangeSet'
                - 'cloudformation:DescribeChangeSet'
                - 'cloudformation:SetStackPolicy'
                - 'cloudwatch:*' # Limit to creation of log groups etc.
                - 'cloudwatchlogs:*' # Limit permissions
                - 'logs:*'
                - 'iam:PassRole'
                - 'sns:*'
                - 'sts:AssumeRole'
                - 'codecommit:*'
                - 'ecr:*'
                Effect: Allow
                Resource: '*'
        - PolicyName: CodeCommitAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                - 'codecommit:*'
                - 'sts:AssumeRole'
                Effect: Allow
                Resource: !GetAtt Repository.Arn
        - PolicyName: CodeBuildAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                - codebuild:*
                - logs:*
                Effect: Allow
                Resource: '*'
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
        Artifacts:
          Type: CODEPIPELINE
        Source:
          Type: CODEPIPELINE
          BuildSpec: |
            version: 0.2
            phases:
              build:
                commands:
                  - !Sub aws cloudformation package --template-file pipeline.yaml --output-template-file output.yaml --s3-bucket cicd-artifactbucket --region eu-west-1
            artifacts:
              files: ./**
        Environment:
          ComputeType: BUILD_GENERAL1_SMALL
          Image: aws/codebuild/docker:17.09.0
          Type: LINUX_CONTAINER
        Name: !Ref StackName
        ServiceRole: !Ref PipelineRole  
        
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub '${Repository.Name}-pipeline'
      ArtifactStore:
        Location: !Ref CodepipelineArtifactBucket
        Type: S3
      DisableInboundStageTransitions: []
      RoleArn: !GetAtt [PipelineRole, Arn]
      Stages:
        - 
          Name: Source
          Actions:
            -
              Name: Checkout
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: CodeCommit
              OutputArtifacts:
                -
                  Name: CFNTemplateOutput
              Configuration:
                BranchName: master
                RepositoryName: !GetAtt Repository.Name
              RunOrder: 1
        -
          Name: PackageCloudFormation
          Actions:
            - 
              Name: PackagePipelineCFN
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref CodeBuildProject
              InputArtifacts: 
                - Name: CFNTemplateOutput
              OutputArtifacts:
                - Name: PackagedCFN
              RunOrder: 1
            
        -  
          Name: Deploy
          Actions:
            -
              Name: CreateUpdate
              InputArtifacts:
                -
                  Name: PackagedCFN
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              OutputArtifacts:
                -
                  Name: CreatedStack
              Configuration:
                ActionMode: CREATE_UPDATE
                RoleArn:
                  Fn::GetAtt: [ CFNRole, Arn ]
                Capabilities: CAPABILITY_NAMED_IAM
                StackName: !Ref StackName
                TemplatePath: PackagedCFN::output.yaml

              RunOrder: 2
  IDE:
    Type: AWS::Cloud9::EnvironmentEC2
    Properties:
      Repositories: 
      - PathComponent: "./project"     
        RepositoryUrl: !GetAtt Repository.CloneUrlHttp
      - PathComponent: "./app"
        RepositoryUrl: "https://github.com/ecsdigital/devopsplayground23-app"
      OwnerArn: !GetAtt User.Arn
      Description: "Test environment"
      AutomaticStopTimeMinutes: 60
      InstanceType: t2.large
      Name: !Ref StackName
      SubnetId: subnet-e5224381